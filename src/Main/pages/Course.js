import * as React from 'react';
import { useParams } from 'react-router-dom';
import FacebookIcon from '@mui/icons-material/Facebook';
import { styled, alpha } from '@mui/material/styles';
import PropTypes from 'prop-types';
import SwipeableViews from 'react-swipeable-views';
import { useTheme } from '@mui/material/styles';
import AppBar from '@mui/material/AppBar';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import BasicModal from '../components/Modal';
import Rating from '@mui/material/Rating';
import Review from '../widgets/Review';
import SimpleAccordion from '../widgets/Accordian';
import InstructorSlider from '../components/InstructorSlider';
import courseApi from '../../Core/api/services/course';
import curriculumApi from '../../Core/api/services/curriculum';


function TabPanel(props) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`full-width-tabpanel-${index}`}
      aria-labelledby={`full-width-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          <Typography>{children}</Typography>
        </Box>
      )}
    </div>
  );
}

TabPanel.propTypes = {
  children: PropTypes.node,
  index: PropTypes.number.isRequired,
  value: PropTypes.number.isRequired,
};

function a11yProps(index) {
  return {
    id: `full-width-tab-${index}`,
    'aria-controls': `full-width-tabpanel-${index}`,
  };
}

function FullWidthTabs(props) {
  const theme = useTheme();
  const [value, setValue] = React.useState(0);
  const [curriculumData, setCurriculumData] = React.useState(null);
  React.useEffect(() => {
  }, []);
  const handleChange = (event, newValue) => {
    setValue(newValue);
  };

  const curriculumHandler = () => {
    if (!curriculumData)
      curriculumApi(props.id, setCurriculumData);

  }
  const handleChangeIndex = (index) => {
    setValue(index);
  };

  return (
    <Box className="techvanto-course-tab-box" sx={{ bgcolor: 'background.paper' }}>
      <AppBar position="static">
        <Tabs
          value={value}
          onChange={handleChange}
          indicatorColor="secondary"
          textColor="inherit"
          variant="fullWidth"
          aria-label="full width tabs example"
          className="techvanto-course-tabs"
        >
          <Tab label="Overview" {...a11yProps(0)} className="techvanto-course-tab" />
          <Tab label="Curriculum" {...a11yProps(1)} className="techvanto-course-tab" onClick={curriculumHandler} />
          <Tab label="Instuctor" {...a11yProps(2)} className="techvanto-course-tab" />
        </Tabs>
      </AppBar>
      <SwipeableViews
        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}
        index={value}
        onChangeIndex={handleChangeIndex}
      >
        <TabPanel value={value} index={0} dir={theme.direction} as>
          <div dangerouslySetInnerHTML={{ __html: props.data.overview }}></div>
        </TabPanel>
        <TabPanel value={value} index={1} dir={theme.direction}>
          <SimpleAccordion data={curriculumData} notLogged={0}></SimpleAccordion>
        </TabPanel>
        <TabPanel value={value} index={2} dir={theme.direction}>
          <Review data={props.data.reviews}></Review>
        </TabPanel>
      </SwipeableViews>
    </Box>
  );
}

const IconWrapper = styled('div')(({ theme }) => ({
  padding: theme.spacing(0, 2),
  height: '100%',
  position: 'absolute',
  pointerEvents: 'none',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
}));
const Course = (props) => {
  const [courseData, setCourseData] = React.useState({});
  const [reviewData , setReviewData] = React.useState({});
  const [instructorData , setInstructorData] = React.useState({});
  let { name,course_id } = useParams();
  React.useEffect(() => {
    courseApi(course_id, setCourseData , setReviewData , setInstructorData);
  }, [])
  let data = [
    {
      title: 'Price',
      data: <div><del>{courseData.price}</del>  {courseData.discount}</div>
    },
    {
      title: 'Duration',
      data: courseData.duration
    },
    {
      title: 'Lessons',
      data: courseData.lessons
    },
    {
      title: 'Enrolled',
      data: courseData.enrollment
    },
    {
      title: 'Access',
      data: courseData.access
    },

  ]

  return (
    <div className="techvanto-course-main-container">
      <div className="techvanto-course-header">
        {/* <img src="https://vertocity.com/wp-content/uploads/2020/05/vert-courses-06.png" width="100%"></img> */}
        <div style={{ backgroundImage: "url(https://vertocity.com/wp-content/uploads/2020/05/vert-courses-06.png)", backgroundSize: "cover", height: "300px", padding: "150px 0px 0px 125px" }}>
          <p className="techvanto-course-heading">Heading</p>
          <p className="techvanto-course-subheading">subheading</p>
          <Rating name="size-small" defaultValue={2.5} precision={0.5} readOnly size={'small'} style={{ left: 1, margin: "20px 0px" }} />
        </div>
      </div>
      <div className="techvanto-course-details">
        <div className="techvanto-course-left-section">
          <FullWidthTabs id={course_id} data={courseData}></FullWidthTabs>
        </div>
        <div className="techvanto-course-right-section">
          <div className="techvanto-course-right-section-div">
            <div className="techvanto-course-video-preview">
              <div className="techvanto-video-preview-icon">
                <div>Video Preview</div>
              </div>
            </div>
            {data.map((value, index) => {
              return (
                <div className="techvanto-course-details-list">
                  <div className="techvanto-course-details-title"><FacebookIcon></FacebookIcon> {value.title}</div>
                  <div className="techvanto-course-details-data">{value.data}</div>
                </div>
              );
            })
            }
            <div className="techvanto-book-demo">
              <BasicModal text="Book Demo" ></BasicModal>
            </div>
            {/* <div><button className="techvanto-book-demo">Book a demo</button></div> */}
          </div>
        </div>
      </div>
      <InstructorSlider></InstructorSlider>


    </div>
  )
}
export default Course;