import * as React from 'react';
import PropTypes from 'prop-types';
import SwipeableViews from 'react-swipeable-views';
import { useTheme } from '@mui/material/styles';
import AppBar from '@mui/material/AppBar';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import "./Assets/Webinar.css"
import WebinarForm from '../components/Forms/Webinar.forms';
import BookDemoForm from '../components/Forms/BookDemoForm';
import { useParams } from 'react-router-dom';
import GetWebinarApi from '../../Core/api/services/Webinar';
import GetWorkshopApi from '../../Core/api/services/Workshop';
import WorkshopAccordian from '../widgets/WorkshopWebinarAccordian';
import InstructorSlider from '../components/InstructorSlider';
function TabPanel(props) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`full-width-tabpanel-${index}`}
            aria-labelledby={`full-width-tab-${index}`}
            {...other}
        >
            {value === index && (
                <Box sx={{ p: 3 }}>
                    <Typography>{children}</Typography>
                </Box>
            )}
        </div>
    );
}

TabPanel.propTypes = {
    children: PropTypes.node,
    index: PropTypes.number.isRequired,
    value: PropTypes.number.isRequired,
};

function a11yProps(index) {
    return {
        id: `full-width-tab-${index}`,
        'aria-controls': `full-width-tabpanel-${index}`,
    };
}

function FullWidthTabs(props) {
    let login = localStorage.getItem("token")!=undefined ?0:1;
    const theme = useTheme();
    const [value, setValue] = React.useState(0);
    let curriculum = props.name=='webinar' ? 'WebinarCurriculums' : 'WorkshopCurriculums';
    let curriculumModule = props.name=='webinar' ? 'WebinarCurriculumModules' : 'worksopCurriculumModules';
    const details = props.data.WebinarDetailsAndBenefit ;
    const handleChange = (event, newValue) => {
        setValue(newValue);
    };

    const handleChangeIndex = (index) => {
        setValue(index);
    };

    return (
        <Box sx={{ bgcolor: 'background.paper', width: 500 }}>
            <AppBar position="static">
                <Tabs
                    value={value}
                    onChange={handleChange}
                    indicatorColor="secondary"
                    textColor="inherit"
                    variant="fullWidth"
                    aria-label="full width tabs example"
                    className="techvanto-course-tabs"
                >
                    <Tab label="Overview" {...a11yProps(0)} className="techvanto-course-tab" />
                    <Tab label="Curriculum" {...a11yProps(1)} className="techvanto-course-tab" />
                </Tabs>
            </AppBar>
            <SwipeableViews
                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}
                index={value}
                onChangeIndex={handleChangeIndex}
            >
                <TabPanel value={value} index={0} dir={theme.direction}>
                    <section>
                        <div><h4>About This Webinar</h4>
                        <div dangerouslySetInnerHTML={{ __html: props.data.overview }}></div>
                        </div>
                        {details?
                         <>
                            <h4>Webinar Detail</h4>
                            <div class="web-detail">
                                <div>Day: <b>{details.day}</b></div>
                                <div>Time: <b>{details.time}</b></div>
                                <div>Date: <b>{details.date}</b></div>
                                <div class="v-line"></div>
                                <div class="v-line v2-line"></div>
                            </div>
                       
                            <h4>Webinar Benifits</h4>
                            <div dangerouslySetInnerHTML={{ __html: details.benefits}}></div>
                            
                        </>
                        :""}
                        <div className="techvanto-webinar-instructor" dangerouslySetInnerHTML={{ __html: props.data.instructor }}></div>
                    </section>
                </TabPanel>
                <TabPanel value={value} index={1} dir={theme.direction}>
                <WorkshopAccordian data={props.data[curriculum]} notLogged={login} name={curriculumModule}></WorkshopAccordian>
                </TabPanel>
            </SwipeableViews>
        </Box>
    );
}


const Webinar = (props) => {
    const {id} = useParams();
    const [details , setDetails] = React.useState({});
    React.useEffect(()=>{
        if(props.name=='webinar')
        GetWebinarApi(id,setDetails);
        if(props.name=='workshop')
        GetWorkshopApi(id,setDetails);
    },[]);
    return (
        <section>
            <div className="techvanto-course-header">
                {/* <img src="https://vertocity.com/wp-content/uploads/2020/05/vert-courses-06.png" width="100%"></img> */}
                <div style={{ backgroundImage: `url(https://vertocity.com/wp-content/uploads/2020/05/vert-courses-03.png`, backgroundSize: "cover", height: "300px", padding: "150px 0px 0px 125px" }}>
                    {/* <p className="techvanto-course-heading">Webinar</p> */}
                    {/* <p className="techvanto-course-subheading">Webinar Subheading</p> */}
                    {/* <Rating name="size-small" value={parseFloat(reviewData.averageRating)} precision={0.1} readOnly size={'small'} style={{ left: 1, margin: "20px 0px" }} /> */}
                </div>
            </div>
            <div className="techvanto-course-details">
                <div className="techvanto-service-left-section">
                    <FullWidthTabs data={details} name={props.name}></FullWidthTabs>
                </div>
                {details.private?"":
                <div style={{    marginLeft:"10px"}}>
                    <BookDemoForm name={details.title}></BookDemoForm>
                </div>
}
            </div>

      <InstructorSlider></InstructorSlider>

        </section>
    )
}

export default Webinar;