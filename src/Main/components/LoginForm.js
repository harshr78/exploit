import * as React from 'react';
import PropTypes from 'prop-types';
import SwipeableViews from 'react-swipeable-views';
import { useTheme } from '@mui/material/styles';
import AppBar from '@mui/material/AppBar';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import { Input } from "@mui/material";
import { Form, Field } from 'react-final-form';
import { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';
import {
    Paper,
    Link,
    Grid,
    Button,
    CssBaseline,
    RadioGroup,
    FormLabel,
    MenuItem,
    FormGroup,
    FormControl,
    FormControlLabel,
} from '@mui/material';





const onSubmit = async values => {
    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
    await sleep(300);
    window.alert(JSON.stringify(values, 0, 2));
  };
  const validate = values => {
    const errors = {};
    if (!values.firstName) {
      errors.firstName = 'Required';
    }
    if (!values.lastName) {
      errors.lastName = 'Required';
    }
    if (!values.email) {
      errors.email = 'Required';
    }
    return errors;
  };
  
function TabPanel(props) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`full-width-tabpanel-${index}`}
            aria-labelledby={`full-width-tab-${index}`}
            {...other}
        >
            {value === index && (
                <Box sx={{ p: 3 }}>
                    <Typography>{children}</Typography>
                </Box>
            )}
        </div>
    );
}

TabPanel.propTypes = {
    children: PropTypes.node,
    index: PropTypes.number.isRequired,
    value: PropTypes.number.isRequired,
};

function a11yProps(index) {
    return {
        id: `full-width-tab-${index}`,
        'aria-controls': `full-width-tabpanel-${index}`,
    };
}

export default function LoginForm() {
    const theme = useTheme();
    const [value, setValue] = React.useState(0);

    const handleChange = (event, newValue) => {
        setValue(newValue);
    };

    const handleChangeIndex = (index) => {
        setValue(index);
    };

    return (
        <Box sx={{ bgcolor: 'background.paper', width: 330 }}>
            <AppBar position="static">
                <Tabs
                    value={value}
                    onChange={handleChange}
                    indicatorColor="secondary"
                    style={{ backgroundColor: "white", color: "black", boxShadow: "none" }}
                    textColor="inherit"
                    variant="fullWidth"
                >
                    <Tab label="Login" {...a11yProps(0)} />
                    <Tab label="Signup" {...a11yProps(1)} />
                </Tabs>
            </AppBar>
            <SwipeableViews
                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}
                index={value}
                onChangeIndex={handleChangeIndex}
            >
                <TabPanel value={value} index={0} dir={theme.direction}>

                    <Form
                        onSubmit={onSubmit}
                        initialValues={{ employed: true, stooge: 'larry' }}
                        validate={validate}
                        render={({ handleSubmit, form, submitting, pristine, values }) => (
                            <form onSubmit={handleSubmit} noValidate>
                                <Paper style={{ padding: 16 }}>
                                    <Grid container alignItems="flex-start" spacing={8}>
                                        
                                        <Grid item xs={12}>
                                            <Field
                                                name="email"
                                                fullWidth
                                                required
                                                component={TextField}
                                                type="text"
                                                label="Email/Phone"
                                            />
                                        </Grid>

                                        <Grid item xs={12}>
                                            <Field
                                                fullWidth
                                                name="notes"
                                                component={TextField}
                                                multiline
                                                required
                                                label="password"
                                            />
                                        </Grid>


                                        <Grid item style={{ marginTop: 16 }}>
                                            <Button
                                                variant="contained"
                                                color="primary"
                                                type="submit"
                                                className="techvanto-know-more-button"
                                                disabled={submitting}
                                            >
                                                Login
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Paper>
                            </form>
                        )}
                    />
                </TabPanel>
                <TabPanel value={value} index={1} dir={theme.direction}>
                <Form
                        onSubmit={onSubmit}
                        initialValues={{ employed: true, stooge: 'larry' }}
                        validate={validate}
                        render={({ handleSubmit, form, submitting, pristine, values }) => (
                            <form onSubmit={handleSubmit} noValidate>
                                <Paper style={{ padding: 16 }}>
                                    <Grid container alignItems="flex-start" spacing={8}>
                                        
                                        <Grid item xs={12}>
                                            <Field
                                                name="email"
                                                fullWidth
                                                required
                                                component={TextField}
                                                type="text"
                                                label="Full Name"
                                            />
                                        </Grid>
                                        <Grid item xs={12}>
                                            <Field
                                                name="email"
                                                fullWidth
                                                required
                                                component={TextField}
                                                type="number"
                                                label="Number"
                                            />
                                        </Grid>
                                        <Grid item xs={12}>
                                            <Field
                                                name="email"
                                                fullWidth
                                                
                                                component={TextField}
                                                type="email"
                                                label="Email"
                                            />
                                        </Grid>

                                        <Grid item xs={12}>
                                            <Field
                                                fullWidth
                                                name="notes"
                                                required
                                                component={TextField}
                                                label="password"
                                            />
                                        </Grid>


                                        <Grid item xs={12} >
                                            <Button
                                                variant="contained"
                                                color="primary"
                                                type="submit"
                                                className="techvanto-know-more-button"
                                                disabled={submitting}
                                            >
                                                SignUp
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Paper>
                            </form>
                        )}
                    />
                </TabPanel>

            </SwipeableViews>
        </Box>
    );
}
