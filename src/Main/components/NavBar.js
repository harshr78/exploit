import * as React from 'react';
import PropTypes from 'prop-types';
import AppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import CssBaseline from '@mui/material/CssBaseline';
import useScrollTrigger from '@mui/material/useScrollTrigger';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';
import Popover from '@mui/material/Popover';
import { styled, alpha } from '@mui/material/styles';
import SearchIcon from '@mui/icons-material/Search';
import InputBase from '@mui/material/InputBase';
import HeaderCard from '../widgets/HeaderCard';
import { Link } from 'react-router-dom';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import IconButton from '@mui/material/IconButton';

import navbarApi from '../../Core/api/services/navigation';

const Search = styled('div')(({ theme }) => ({
    position: 'relative',
    borderRadius: theme.shape.borderRadius,
    backgroundColor: alpha(theme.palette.common.white, 0.15),
    '&:hover': {
        backgroundColor: alpha(theme.palette.common.white, 0.25),
    },
    marginRight: theme.spacing(2),
    marginLeft: 0,
    width: '100%',
    [theme.breakpoints.up('sm')]: {
        marginLeft: theme.spacing(3),
        width: 'auto',
    },
}));

const SearchIconWrapper = styled('div')(({ theme }) => ({
    padding: theme.spacing(0, 2),
    height: '100%',
    position: 'absolute',
    pointerEvents: 'none',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
}));

const StyledInputBase = styled(InputBase)(({ theme }) => ({
    color: 'inherit',
    '& .MuiInputBase-input': {
        padding: theme.spacing(1, 1, 1, 0),
        // vertical padding + font size from searchIcon
        paddingLeft: `calc(1em + ${theme.spacing(4)})`,
        transition: theme.transitions.create('width'),
        width: '100%',
        [theme.breakpoints.up('md')]: {
            width: '20ch',
        },
    },
}));


const ExpandMore = styled((props) => {
    const { expand, ...other } = props;
    return <IconButton {...other} />;
})(({ theme, expand }) => ({
    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',
    marginLeft: 'auto',
    transition: theme.transitions.create('transform', {
        duration: theme.transitions.duration.shortest,
    }),
}));

const ElevateAppBar = (props) => {
    const [anchorEl, setAnchorEl] = React.useState(null);
    const [scroll, setScroll] = React.useState(false);
    const [expanded, setExpanded] = React.useState(false);
    const [navbarData, setNavbarData] = React.useState([]);
    const [currentSection, setCurrentSection] = React.useState(-1);
    const [currentSubSection, setCurrentSubSection] = React.useState(-1);
    React.useEffect(() => {
        navbarApi(setNavbarData);

        window.addEventListener("scroll", () => {
            setScroll(window.scrollY > 50);
        });
    }, []);
    const handleExpandClick = () => {
        setExpanded(currentSection != -1);
    };

    const handlePopoverOpen = (event, data) => {
        setCurrentSection(data);
        console.log(navbarData[data]);
        if (navbarData[data].sectioncategories.length) {
            setCurrentSubSection(0);
        }
        setAnchorEl(event.currentTarget);
        handleExpandClick();
    };
    const handleClose = () => {
        setCurrentSection(-1);
        setCurrentSubSection(-1);
        setAnchorEl(null);
        handleExpandClick();
    };

    const open = Boolean(anchorEl);
    const id = open ? 'techvanto-course-popover' : undefined;

    return (
        <React.Fragment>
            <CssBaseline />
            <AppBar className={scroll ? "navbar-background" : "bg-royal-transparent"}>
                <Container maxWidth="lg">
                    <Toolbar>
                        <Typography variant="h4" component="div" className="tecvanto-navbar-header techvanto-nabar-link technovanto-scroll-hide">
                            Techvanto
                        </Typography>



                        <Container maxWidth="md" sx={{ a: 2 }} >
                            <Typography variant="a" component="div"

                            >
                                <a className="techvanto-nabar-link">
                                    Webinar
                                    <ExpandMore
                                       
                                        aria-label="show more"
                                    >
                                        <ExpandMoreIcon className="techvanto-nabar-link" />
                                    </ExpandMore>
                                </a>
                            </Typography>
                            <div style={{ display: "flex" }}>
                                {
                                    navbarData.map((data, index) => {
                                        return (
                                            <Typography variant="a" component="div"
                                                onMouseEnter={(e) => { handlePopoverOpen(e, index) }}
                                                aria-describedby={index}
                                            >
                                                <a className="techvanto-nabar-link">
                                                    {data.title}
                                                    <ExpandMore
                                                        expand={currentSection == index}
                                                        aria-expanded={currentSection == index}
                                                        aria-label="show more"
                                                    >
                                                        <ExpandMoreIcon sx={{ color: "white" }} />
                                                    </ExpandMore>
                                                </a>
                                            </Typography>
                                        )
                                    })}
                                <Popover
                                    id={id}
                                    open={open}
                                    anchorEl={anchorEl}
                                    anchorOrigin={{
                                        vertical: 'bottom',
                                        horizontal: 'right',
                                    }}
                                    transformOrigin={{
                                        vertical: 'top',
                                        horizontal: 'center',
                                    }}
                                    className="technovanto-scroll-hide techvanto-navbar-popover"

                                >

                                    <Typography onMouseLeave={handleClose} component="div" sx={{ a: 2 }} className="technovanto-scroll-hide">

                                        <div className="technovanto-navbar-dropdown-content technovanto-scroll-hide">
                                            <div className="technovanto-navbar-dropdown-content-left technovanto-scroll-hide">
                                                <ul className="techvanto-list technovanto-scroll-hide">
                                                    <li className="techvanto-list-header technovanto-scroll-hide">
                                                        Course Category:
                                                    </li>
                                                    {

                                                        currentSection != -1 ? navbarData[currentSection].sectioncategories.map((sectionData, index) => {
                                                            return <li className="" onMouseEnter={() => { setCurrentSubSection(index) }}>
                                                                {sectionData.title}
                                                            </li>
                                                        }) : ""
                                                    }



                                                </ul>
                                            </div>

                                            <div className="technovanto-navbar-dropdown-content-right technovanto-scroll-hide">
                                                <div className="technovanto-dropdown-right-card technovanto-scroll-hide">
                                                    {currentSection != -1 && currentSubSection != -1 ?
                                                        <HeaderCard
                                                            image={navbarData[currentSection].sectioncategories[currentSubSection].pic}
                                                            description={navbarData[currentSection].sectioncategories[currentSubSection].description}
                                                            title={navbarData[currentSection].sectioncategories[currentSubSection].title}
                                                            gradient={navbarData[currentSection].sectioncategories[currentSubSection].gradient}
                                                        >
                                                        </HeaderCard> : ""

                                                    }

                                                </div>

                                                <div className="technovanto-dropdown-right-link technovanto-scroll-hide">
                                                    <ul className="techvanto-list technovanto-scroll-hide">
                                                        <li className="techvanto-list-header technovanto-scroll-hide">
                                                            Select Category:
                                                        </li>
                                                        {currentSection != -1 && currentSubSection != -1 ? navbarData[currentSection].sectioncategories[currentSubSection].sectionsubcategories.map((data, index) => {
                                                            return (<li className="active">
                                                                <Link to={"/" + data.title + "/" + data.id}>{data.title}</Link>
                                                            </li>);
                                                        }) : ""}
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>

                                    </Typography>
                                </Popover>

                            </div>  </Container>

                        <Search>
                            <SearchIconWrapper>
                                <SearchIcon />
                            </SearchIconWrapper>
                            <StyledInputBase
                                placeholder="Search…"
                                inputProps={{ 'aria-label': 'search' }}
                            />
                        </Search>
                    </Toolbar>
                </Container>
            </AppBar>

        </React.Fragment>

    );
}

export default ElevateAppBar;