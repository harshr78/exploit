const express = require("express");
var router = express.Router();
var controller = require("../controllers/routes/Controler.routes");
var serviceRoutes = require("../routes/Service.routes");
var sectionTypeController = controller.sectionTypeController;
var categoryController = controller.categoryController;
var subCategoryController = controller.subCategoryController;
var serviceController = controller.serviceController;
var curriculumController = controller.curriculumController;
var reviewController = controller.reviewController;
var instructorController = controller.instructorController;
router.get(serviceRoutes.GetServiceTypes, async (req,res)=>{
    var types;
    await sectionTypeController.findAll().then(data=>{
        types=data;
    }).catch(ex=>{
        types=[];
    })

    return res.send(types);
    
});

router.get(serviceRoutes.AllServices,async(req,res)=>{
    var subCategory;
    var services;
    var condition = null;
    await subCategoryController.findAll().then(data=>{
        subCategory = data;
    }).catch(ex=>{
        subCategory=[]
    })
    if(req.query.id){
        condition={sectionsubcategoryId:req.query.id.split(",")}
    }
    await serviceController.findAll(condition).then(data=>{
        services = data;
    }).catch(ex=>{
        console.log(ex);
        services=[]
    })
    return res.send({"services":services,"subcategory":subCategory});
})

router.get(serviceRoutes.GetService,async(req,res)=>{
    var condition={id:req.query.id};
    var service ;
    service  = await serviceController.findOne(condition,res).catch(ex=>{
        service = {}
    })
    var reviewAverage = await reviewController.getAverageAndCount({serviceId:req.query.id}).catch(ex=>{

    })

    var instructor = await instructorController.findAll().catch(ex=>{})

    return res.send({"service":service,"review":reviewAverage,"instructor":instructor});

})

router.get(serviceRoutes.GetCurriculum,async (req,res)=>{
    var curriculum;
    var serviceId = req.query.id;
    if(!serviceId){
        res.statusCode=406;
        return res.send("please select service")
    }
    var condition = {serviceId:serviceId}
    await curriculumController.findAll(condition).then(data=>
        {
            curriculum=data;
        }).catch(ex=>{
            curriculum=[]
        })
        return res.send(curriculum);
})

router.post(serviceRoutes.UploadServiceTypes,(req,res,next)=>{
    if(!req.body.title){
        res.statusCode=400;
        return res.send("please fill all the details");
    }
    else{
       serviceController.create(req.body.title,res)
    }
})

module.exports = router;