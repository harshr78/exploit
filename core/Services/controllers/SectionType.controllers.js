const { Where } = require("sequelize");
const DB  = require("../../Connection/index.models")

let sectionType = DB.sectiontype;
let op = DB.Sequelize.Op;


exports.create = (title,pic) => {
    const sectionTypeObject = {
        title: title,
        pic: pic   
    }
    sectionType.create(sectionTypeObject).then(data=>{return data}).catch(err=>{
        return err.message});
};

// Retrieve all data from the database.
exports.findAll =(condition=null) => {
    return new Promise((resolve, reject)=>{

    sectionType.findAll({ where: condition })
    .then(data => {
        console.log(data,"sent")
       return resolve(data);
    })
    .catch(err => {
        console.log(err.message);
      return "Some error occurred while retrieving data."
    });
    });


};

// Find a single sectionType with an id
exports.findOne = (condition) => {
    sectionType.findOne(
        {
            where: condition
        }
    )
    .then(data => {
      if (data) {
        return data;
      } else {
        return `Cannot find sectionType with id=${id}.`
      }
    })
    .catch(err => {
      return "Error retrieving sectionType with id=" + id
    });

};

// Update a sectionType by the id in the request
exports.update = (condition) => {
    sectionType.update(req.body, {
        where: {condition}
      })
        .then(num => {
          if (num == 1) {
            return "sectionType was updated successfully."
     
          } else {
            return `Cannot update sectionType with id=${id}. Maybe sectionType was not found or req.body is empty!`
            
          }
        })
        .catch(err => {
          return "Error updating sectionType with id=" + id
        });
};

// Delete a sectionType with the specified id in the request
exports.delete = (condition) => {
    sectionType.destroy({
      where: { id: id }
    })
      .then(num => {
        if (num == 1) {
         return "sectionType was deleted successfully!"

        } else {
          return `Cannot delete sectionType with id=${id}. Maybe sectionType was not found!`
        }
      })
      .catch(err => {
        return `Could not delete sectionType with id=${id} Contact Administartion`;
      });
};

// Delete all data from the database.
exports.deleteAll = (condition=null) => {
    sectionType.destroy({
      where: {condition},
      truncate: false
    })
      .then(nums => {
        return `${nums} sectionTypes were deleted successfully!` ;
      })
      .catch(err => {
        return(err.message || "Some error occurred while removing all sectionTypes.");
      });
  };